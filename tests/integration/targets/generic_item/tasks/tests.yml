---

- name: Create new item
  generic_item:
    state: present
    title: "Example Item - ANSIBLE TEST {{ 9999 | random }}"
    category: server
    tags:
      - exampleTag
    fields:
      - label: mypassword
        field_type: concealed
        generate_value: on_create
        generator_recipe:
          include_digits: no
      - label: Test
        value: Hello
  register: result

- name: Assert item properties returned
  assert:
    that:
      - result.changed
      - result.op_item is defined
      - result.op_item.id is defined
      - result.op_item.fields.mypassword is defined

- set_fact:
    updated_item_title: "{{ result.op_item.title }} UPDATED"

- name: Upsert item
  generic_item:
    state: present
    title: "{{ updated_item_title }}"
    uuid: "{{ result.op_item.id }}"
    category: server
    tags:
      - exampleTag
      - another-tag
    fields:
      - label: mypassword
        field_type: concealed
        generate_value: on_create
        generator_recipe:
          include_digits: no
      - label: Different label this time
        value: Hello
      - label: Another field
        value: qwertyuiop[]
  register: updated_1p_item

- name: Assert updated item properties
  assert:
    that:
      - updated_1p_item.changed
      - updated_1p_item.op_item.id == result.op_item.id
      - updated_1p_item.op_item.title == updated_item_title
      - updated_1p_item.op_item.fields.mypassword.value == result.op_item.fields.mypassword.value

- name: Assert tags updated
  assert:
    that:
      - "'{{ item }}' in updated_1p_item.op_item.tags"
  with_items:
    - exampleTag
    - another-tag

- name: Cleanup
  generic_item:
    state: absent
    uuid: "{{result['op_item']['id']}}"